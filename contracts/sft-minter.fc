;; SFT minter smart contract;; storage scheme;; storage#_ total_supply:Coins index:uint64 admin_address:MsgAddress collection_address:MsgAddress individual_sft_content:^Cell sft_wallet_code:^Cell = Storage;(int, int, slice, slice, cell, cell) load_data() inline {  slice ds = get_data().begin_parse();  return (      ds~load_coins(), ;; total_supply      ds~load_uint(64), ;; index      ds~load_msg_addr(), ;; admin_address      ds~load_msg_addr(), ;; collection_address      ds~load_ref(), ;; individual_sft_content      ds~load_ref()  ;; sft_wallet_code  );}() save_data(int total_supply, int index, slice admin_address, slice collection_address, cell individual_sft_content, cell sft_wallet_code) impure inline {  set_data(begin_cell()            .store_coins(total_supply)            .store_uint(index, 64)            .store_slice(admin_address)            .store_slice(collection_address)            .store_ref(individual_sft_content)            .store_ref(sft_wallet_code)           .end_cell()          );}() mint_sft_tokens(slice to_address, cell sft_wallet_code, int amount, cell master_msg) impure {  cell state_init = calculate_sft_wallet_state_init(to_address, my_address(), sft_wallet_code);  slice to_wallet_address = calculate_sft_wallet_address(state_init);  var msg = begin_cell()    .store_uint(0x18, 6)    .store_slice(to_wallet_address)    .store_coins(amount)    .store_uint(4 + 2 + 1, 1 + 4 + 4 + 64 + 32 + 1 + 1 + 1)    .store_ref(state_init)    .store_ref(master_msg);  send_raw_message(msg.end_cell(), 1); ;; pay transfer fees separately, revert on errors}() recv_internal(int msg_value, cell in_msg_full, slice in_msg_body) impure {    if (in_msg_body.slice_empty?()) { ;; ignore empty messages        return ();    }    slice cs = in_msg_full.begin_parse();    int flags = cs~load_uint(4);    if (flags & 1) { ;; ignore all bounced messages        return ();    }    slice sender_address = cs~load_msg_addr();      int op = in_msg_body~load_uint(32);    int query_id = in_msg_body~load_uint(64);    (int total_supply,     int index,     slice admin_address,     slice collection_address,     cell individual_sft_content,     cell sft_wallet_code) = load_data();    if (op == op::mint()) {        throw_unless(73, equal_slices(sender_address, admin_address));        slice to_address = in_msg_body~load_msg_addr();        int amount = in_msg_body~load_coins();        cell master_msg = in_msg_body~load_ref();        slice master_msg_cs = master_msg.begin_parse();        master_msg_cs~skip_bits(32 + 64); ;; op + query_id        int sft_amount = master_msg_cs~load_coins();        mint_sft_tokens(to_address, sft_wallet_code, amount, master_msg);        save_data(total_supply + sft_amount, index, admin_address, collection_address, individual_sft_content, sft_wallet_code);        return ();    }    if (op == op::burn_notification()) {        int sft_amount = in_msg_body~load_coins();        slice from_address = in_msg_body~load_msg_addr();        throw_unless(74,            equal_slices(calculate_user_sft_wallet_address(from_address, my_address(), sft_wallet_code), sender_address)        );        save_data(total_supply - sft_amount, index, admin_address, collection_address, individual_sft_content, sft_wallet_code);        slice response_address = in_msg_body~load_msg_addr();        if (response_address.preload_uint(2) != 0) {          var msg = begin_cell()            .store_uint(0x10, 6) ;; nobounce - int_msg_info$0 ihr_disabled:Bool bounce:Bool bounced:Bool src:MsgAddress -> 011000            .store_slice(response_address)            .store_coins(0)            .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)            .store_uint(op::excesses(), 32)            .store_uint(query_id, 64);          send_raw_message(msg.end_cell(), 2 + 64);        }        return ();    }    if (op == 3) { ;; change admin        throw_unless(73, equal_slices(sender_address, admin_address));        slice new_admin_address = in_msg_body~load_msg_addr();        save_data(total_supply, index, new_admin_address, collection_address, individual_sft_content, sft_wallet_code);        return ();    }    if (op == 4) { ;; change individual_sft_content, delete this for immutable tokens        throw_unless(73, equal_slices(sender_address, admin_address));        save_data(total_supply, index, admin_address, collection_address, in_msg_body~load_ref(), sft_wallet_code);        return ();    }    throw(0xffff);}{--}(int, int, slice, slice, cell, cell) get_sft_data() method_id {    (int total_supply, int index, slice admin_address, slice collection_address, cell individual_sft_content, cell sft_wallet_code) = load_data();    return (total_supply, index, admin_address, collection_address, individual_sft_content, sft_wallet_code);}slice get_wallet_address(slice owner_address) method_id {     (int total_supply, int index, slice admin_address, slice collection_address, cell individual_sft_content, cell sft_wallet_code) = load_data();    return calculate_user_sft_wallet_address(owner_address, my_address(), sft_wallet_code);}